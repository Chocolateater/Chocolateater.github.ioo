<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>感谢名单</title>
      <link href="/Anzhiyu/2024/10/04/%E6%84%9F%E8%B0%A2%E5%90%8D%E5%8D%95/"/>
      <url>/Anzhiyu/2024/10/04/%E6%84%9F%E8%B0%A2%E5%90%8D%E5%8D%95/</url>
      
        <content type="html"><![CDATA[<p>感谢以下大佬对<a href="https://chocolateater.github.io/Webstack">本站</a>的支持！</p><p><a href="https://adarkroom.doublespeakgames.com/">小黑屋</a> 贡献者：<a href="https://www.luogu.com.cn/user/1070264">TheRangerNick</a></p><p><a href="https://luogu.codingoier.com/">CodingOier 工具站</a> 贡献者：<a href="https://www.luogu.com.cn/user/754324">CodingOier</a></p><p><a href="https://qwerty.kaiyi.cool/">Qwerty Learner</a> 贡献者：<a href="https://www.luogu.com.cn/user/684031">皓月星辉</a></p><p><a href="https://tj.imken.dev/">题解格式化工具</a> 贡献者：<a href="https://www.luogu.com.cn/user/1428495">KMYC</a></p><p><a href="https://s21.ax1x.com/2024/10/04/pA8ez5D.png">Amemei 聊天室</a> 贡献者：<a href="https://www.luogu.com.cn/user/752555"><em>NightFire666</em></a></p><p><a href="https://yuantiji.ac/">原题机</a> 贡献者：<a href="https://www.luogu.com.cn/user/1422453"><em>Q_H_Q</em></a></p><p><a href="https://poki.com/zh-cn/">Poki</a> 贡献者：<a href="https://www.luogu.com.cn/user/1382244">CQ_lattle_Z</a></p><p><a href="https://greasyfork.org/">GreasyFork</a> 贡献者：<a href="https://www.luogu.com.cn/user/752555"><em>NightFire666</em></a></p><p>记忆不太好，如有遗漏，请指出，谢谢！</p>]]></content>
      
      
      <categories>
          
          <category> 其他 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Webstack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>奇思妙想—征集</title>
      <link href="/Anzhiyu/2024/10/03/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3%E2%80%94%E5%BE%81%E9%9B%86/"/>
      <url>/Anzhiyu/2024/10/03/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3%E2%80%94%E5%BE%81%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<p>想做一个收集散布在互联网角落的有趣网站的博物馆，欢迎投稿！</p><p>下面是投稿要求。</p><p><a href="https://chocolateater.github.io/Webstack/">展示页</a> | <a href="https://www.luogu.com/article/wuj5hnzw">洛谷投稿页</a></p><p>在有洛谷账号的情况下您应当尽可能使用洛谷通道。</p><hr><h3 id="网站"><a href="#网站" class="headerlink" title="网站"></a>网站</h3><ol><li>网址（必填）</li><li>简介（可选）</li><li>图片（可选）</li></ol><h3 id="自建网站"><a href="#自建网站" class="headerlink" title="自建网站"></a>自建网站</h3><ol><li>网址（必填）</li><li>简介（必填）</li><li>图片（可选）</li></ol><h3 id="PC端软件"><a href="#PC端软件" class="headerlink" title="PC端软件"></a>PC端软件</h3><ol><li>下载地址（必填）</li><li>简介（必填）</li><li>图片（可选）</li></ol><h3 id="移动端软件"><a href="#移动端软件" class="headerlink" title="移动端软件"></a>移动端软件</h3><ol><li>下载方式（必填）</li><li>简介（必填）</li><li>图片（必填）</li></ol><hr><p>所有投稿均需要附上您的姓名（网名）与联系方式（洛谷个人主页，知乎个人主页等）</p>]]></content>
      
      
      <categories>
          
          <category> 其他 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github 图床折腾手记</title>
      <link href="/Anzhiyu/2024/10/03/Github%E5%9B%BE%E5%BA%8A%E6%8A%98%E8%85%BE%E6%89%8B%E8%AE%B0/"/>
      <url>/Anzhiyu/2024/10/03/Github%E5%9B%BE%E5%BA%8A%E6%8A%98%E8%85%BE%E6%89%8B%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>图床，一个我个人经常使用，但是又没有固定选择的东西。</p><p>之前尝试过 <a href="https://www.luogu.com.cn/image">洛谷图床</a>，<a href="https://www.imgse.com/">路过图床</a>，<a href="https://sm.ms/">SM.MS</a> 等一些国内可以访问且相对知名的图床。</p><p>洛谷图床主要是验证码很烦，储存空间也小，而且不支持读取剪贴板，所以最后就弃坑了。</p><p>路过图床之前是我的主力图床，使用相当方便（除了有时候网站访问很慢），但是每天只能传 8 张图，日常使用还行，写题解（个人喜欢在题解里加入一堆图片），博客的时候完全不够用啊……</p><p>所以后来发现了 SM.MS，同样很好用，服务器架在国外但是速度甚至比路过图床还快。没有上传数量限制，但是每个用户限制 5 GB 储存空间，完全够用，但是有个限制在哪就挺烦的……</p><p><img src="https://chocolateater.github.io/PicHub/202409292036840.png" alt="image-20240929203605657"></p><p><em>SM.MS 用户界面</em></p><p>而且最重要的是以上所有图床都和 Typora&#x2F;TypeDown 不兼容…… 导致我得浏览器——编辑器来回切换……</p><p>懒，而且嫌烦，所以最终，我找到了 PicGo。</p><p><img src="https://chocolateater.github.io/PicHub/202409292035835.png"></p><p><em>PicGo 用户界面</em></p><p>第一次认识 PicGo 是在刚入坑 Github 的时候，那时候的主力 Markdown 编辑器还是 TypeDown，折腾过一天用于配置 PicGo，但是最后没成功。现在想想可能是当时开着加速器导致上传证书验证失败，而且那会儿也非常的愚蠢，报错了也没去百度，最后就不了了之了。</p><p>后来，突发奇想，想整个 Typora 玩玩，但是没钱……</p><p>所以又折腾了半天，手动破解了 Typora。然后发现能换主题欸 (╹ڡ╹ )，于是又花了半天翻找各种主题……</p><p><del>我们颜值至上主义者是这样的</del></p><p>最后的最后，我在 Typora 的设置里发现了这样的一小句话：</p><p><img src="https://chocolateater.github.io/PicHub/202409292040158.png" alt="image-20240929204011114"></p><p>当时不知道怎么就脑抽了…… 把 PicGo 下了回来。</p><p>浅浅配置好之后就十分兴奋的上传了一张图片试试。</p><p>不出意外，出意外了。</p><p><img src="https://chocolateater.github.io/PicHub/202409292042905.png" alt="image-20240929204209862"></p><p>不过起码会翻译了，跑去百度翻译一查，“无法验证第一证书”。</p><p>第一反应是我的 Github Token 权限没配置好，所以最后把原来的 Fine-grained Token 换成了权限更高的 Classical Token（教程是这么说的……），顺带把能勾选的选项全勾上了。</p><p>但回去，一看，还是不行，报错的提示都一样。</p><p>算了，还得是度娘。</p><p>查出来的结果也很离谱，居然是加速器的问题……</p><p>把加速器关了就没这回事了。</p><p>离谱。</p><p>至此，我以为总算搞定了…… 随手就把 Typora 和 PicGo 绑上了。</p><p>测试了一下，能上传，于是开始兴高采烈的搬迁图库。</p><p>最后链接提出来一看，白干~</p><p><img src="https://chocolateater.github.io/PicHub//202409292051438.png" alt="image-20240929205104261"></p><p>学乖了，直接百度。</p><p>结果是这个玩意儿需要梯子。</p><p>我寻思梯子我有归我有，但最后这坨东西是要放洛谷上去的，总不能让每个看的人都先挂上梯子吧…… <del>看起来像是推销节点的</del></p><blockquote><p>由于一些不可抗力，请您在阅读本篇博客前准备好一个能够访问 <a href="https://raw.githubusercontent.com/">https://raw.githubusercontent.com</a> 的**，我们推荐您使用 **节点，0.3 KB&#x2F;S 带宽不限速，每月只要 999 ~ 注册时优惠邀请码记得填 **** ……</p></blockquote><p>听起来就离谱。</p><p>所以当时我就想到一些奇技淫巧。</p><p>比如，把这个图床包装成一个基于 Github Pages 的网站。</p><p>正好<del>我会</del> Ai会 写 Ci（提交时运行的工作流），每次上传图片的时候自动部署，简单快捷，主要是不要动手，完全自动化。</p><p>效果不错，PicGo 也可以自定义域名，结合起来运行的很流畅。</p><p>唯一可惜是 Github 部署 Pages 需要一点时间，不过我觉得问题不大。</p><p>至此，终于搞定了。</p><p>虽然听起来挺少，但也折腾了我一个星期呢…… QAQ</p><hr><p>事实上，此前我还尝试过基于 TeleGraph 的自建图床，当时是被 <a href="https://www.luogu.com/user/1056150">黑客少年</a> 的 <a href="https://image.zhaohonghao-qwq.com/">图床</a> 忽悠入坑的，因为感觉还不错，而且据说储存空间无限，所以就心动了……</p><p>网上扒了教程，注册了 CF 的账号，摸了一节课的鱼，算是把 <a href="https://image-hub.pages.dev/">网站</a> 弄上线了。</p><p>结果，上去一看，人麻了。</p><p><img src="https://chocolateater.github.io/PicHub//202409292101442.png" alt="image-20240929210107498"></p><p>后来一查 README，蚌埠住了。</p><p><img src="https://chocolateater.github.io/PicHub//202409292101791.png"></p><p>《论 Fork 不看 README 的一百种坏处》</p><p>所以这个项目最后也流产了……</p><p>不过我启用了自动与主仓库同步更新，希望有一天大佬们能修好吧……</p>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 开发 </tag>
            
            <tag> 图床 </tag>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>完美匹配 题解/学习笔记</title>
      <link href="/Anzhiyu/2024/10/03/%E5%AE%8C%E7%BE%8E%E5%8C%B9%E9%85%8D/"/>
      <url>/Anzhiyu/2024/10/03/%E5%AE%8C%E7%BE%8E%E5%8C%B9%E9%85%8D/</url>
      
        <content type="html"><![CDATA[<p>非常好状压，使我的大脑旋转。</p><p><a href="https://iai.sh.cn/problem/824">题面</a> 图片格式的题面在文末。</p><h3 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h3><p>$2*N$ 个点，分为两组。</p><p>同一个组内的点没友有边相连。<del>人话：二分图</del></p><p>给出两组点之间的相连状况。</p><p>求将两组点一一配对方案数。</p><h3 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h3><ul><li><p>对于 $60%$ 的数据，$N\leq15$</p></li><li><p>对于 $100%$ 的数据，$N\leq22$</p><p>一眼状压</p></li></ul><h3 id="暴搜"><a href="#暴搜" class="headerlink" title="暴搜"></a>暴搜</h3><p>考虑递归。</p><p>从第 $1$ 个点开始枚举，将这个点所有可能匹配递归一遍。时间复杂度 $\text{O}(N!)$，只能拿到 $\mathtt{60 pts}$ 。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">bool</span> vis[<span class="number">30</span>];</span><br><span class="line"><span class="type">int</span> a[<span class="number">30</span>][<span class="number">30</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> t)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(t==n<span class="number">+1</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[t][i]&amp;&amp;!vis[i])&#123;</span><br><span class="line">vis[i]=<span class="literal">true</span>;<span class="comment">//将 t 与 i 匹配</span></span><br><span class="line">sum+=<span class="built_in">dfs</span>(t<span class="number">+1</span>);</span><br><span class="line">vis[i]=<span class="literal">false</span>;<span class="comment">//重置</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> sum % mod;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">cin&gt;&gt;a[i][j];</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;<span class="built_in">dfs</span>(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h3 id="逝着将函数纯化"><a href="#逝着将函数纯化" class="headerlink" title="逝着将函数纯化"></a>逝着将函数纯化</h3><p>为记忆化做准备。</p><blockquote><p>纯化函数：将函数化为纯函数。</p><p>纯函数：无论外部变量如何变化，同一参数返回的结果永远一致的函数。</p></blockquote><p>需要将 <code>vis</code> 数组作为递归函数（<code>dfs</code>）的参数传递。</p><p>显然不可能直接传数组。</p><p>布尔数组 $→$ 一个二进制串 $→$ 十进制数字</p><p>这里不过多解释，请自行阅读状压 $\mathtt{DP}$ 入门教程。</p><p>空间复杂度 $2^{22}&#x3D;4194304$ 完全可以接受。</p><p><code>dfs</code> 函数的参数 <code>s</code> 二进制下的第 $i$ 位表示第 $i$ 个点是否已被选择（或者说是占用）。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getbit</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span>&#123; <span class="comment">// 获取 a 的第 b 位，最低位编号为 0</span></span><br><span class="line"><span class="keyword">return</span> (a&gt;&gt;b)&amp;<span class="number">1</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">setbit</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span>&#123;<span class="comment">// 将 a 的第 b 位设置为 1 ，最低位编号为 0</span></span><br><span class="line"><span class="keyword">return</span> a|(<span class="number">1</span>&lt;&lt;b); </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> a[<span class="number">30</span>][<span class="number">30</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> t,<span class="type">int</span> s)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(t==n<span class="number">+1</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[t][i]&amp;&amp;!<span class="built_in">getbit</span>(s,i<span class="number">-1</span>))&#123;</span><br><span class="line">sum+=<span class="built_in">dfs</span>(t<span class="number">+1</span>,<span class="built_in">setbit</span>(s,i<span class="number">-1</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> sum % mod;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">cin&gt;&gt;a[i][j];</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;<span class="built_in">dfs</span>(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h3 id="添加记忆化"><a href="#添加记忆化" class="headerlink" title="添加记忆化"></a>添加记忆化</h3><p>得益于纯函数的特性，程序不必重复计算同一参数下 <code>dfs</code> 函数返回的值。</p><p>添加两个数组即可。</p><p>布尔类型的 <code>vis[i][j]</code> 数组表示是否已经计算过 <code>dfs(i,j)</code> 的值。</p><p>整数类型的 <code>mem[i][j]</code> 数组表示已经计算过的 <code>dfs(i,j)</code> 的值。</p><p>空间复杂度 $2^{22}$ ，可以接受。</p><blockquote><p>为什么空间复杂度不是 $N*2^{22}$ ？</p><p>事实上，对于一个固定的 <code>s</code>，无论现在正在处理的点（<code>t</code>）究竟是 $1$ 还是 $1e9$ 都没有差别。</p><p>至于为什么，只需略加思考可得，对于不同的状态 <code>s</code> ，<code>t</code> 是绝对不可能相同的。</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getbit</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span>&#123; <span class="comment">// 获取 a 的第 b 位，最低位编号为 0</span></span><br><span class="line"><span class="keyword">return</span> (a&gt;&gt;b)&amp;<span class="number">1</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">setbit</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span>&#123;<span class="comment">// 将 a 的第 b 位设置为 1 ，最低位编号为 0</span></span><br><span class="line"><span class="keyword">return</span> a|(<span class="number">1</span>&lt;&lt;b); </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> a[<span class="number">30</span>][<span class="number">30</span>];</span><br><span class="line"><span class="type">int</span> mem[<span class="number">5195304</span>];</span><br><span class="line"><span class="type">bool</span> vis[<span class="number">5195304</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> t,<span class="type">int</span> s)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(t==n<span class="number">+1</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(vis[s])&#123;</span><br><span class="line"><span class="keyword">return</span> mem[s];</span><br><span class="line">&#125;</span><br><span class="line">vis[s]=<span class="literal">true</span>;</span><br><span class="line"><span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[t][i]&amp;&amp;!<span class="built_in">getbit</span>(s,i<span class="number">-1</span>))&#123;</span><br><span class="line">sum+=<span class="built_in">dfs</span>(t<span class="number">+1</span>,<span class="built_in">setbit</span>(s,i<span class="number">-1</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> mem[s] = sum % mod;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">cin&gt;&gt;a[i][j];</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;<span class="built_in">dfs</span>(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h3><p><img src="https://s2.loli.net/2024/10/04/YvZgSeGUhB7w42q.png" alt="image.png"></p><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="1"><a href="#1" class="headerlink" title="#1"></a>#1</h4><h5 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">1 1 1 1</span><br><span class="line">1 1 1 1</span><br><span class="line">1 1 1 1</span><br><span class="line">1 1 1 1</span><br></pre></td></tr></table></figure><h5 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">24</span><br></pre></td></tr></table></figure><h5 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a>Explain</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4! = 24</span><br></pre></td></tr></table></figure><h4 id="2"><a href="#2" class="headerlink" title="#2"></a>#2</h4><h5 id="Input-1"><a href="#Input-1" class="headerlink" title="Input"></a>Input</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">1 0 0</span><br><span class="line">0 1 0</span><br><span class="line">0 0 1</span><br></pre></td></tr></table></figure><h5 id="Output-1"><a href="#Output-1" class="headerlink" title="Output"></a>Output</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure><h5 id="Explain-1"><a href="#Explain-1" class="headerlink" title="Explain"></a>Explain</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">有一组完美匹配</span><br></pre></td></tr></table></figure><h4 id="3"><a href="#3" class="headerlink" title="#3"></a>#3</h4><h5 id="Input-2"><a href="#Input-2" class="headerlink" title="Input"></a>Input</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">12</span><br><span class="line">1 0 0 0 0 0 0 1 1 1 1 0</span><br><span class="line">0 1 0 0 0 0 1 0 0 0 0 0</span><br><span class="line">0 0 1 0 0 0 0 1 0 0 0 0</span><br><span class="line">0 0 0 1 0 0 0 0 1 0 0 0</span><br><span class="line">0 0 0 0 1 0 0 0 0 1 0 0</span><br><span class="line">0 0 0 0 0 1 0 0 0 0 0 1</span><br><span class="line">0 1 0 0 0 0 1 0 0 0 0 0</span><br><span class="line">1 0 1 0 0 0 0 1 0 0 0 0</span><br><span class="line">1 0 0 1 0 0 0 0 1 0 0 0</span><br><span class="line">1 0 0 0 1 0 0 0 0 1 0 0</span><br><span class="line">1 0 0 0 0 0 0 0 0 0 1 0</span><br><span class="line">0 0 0 0 0 1 0 0 0 0 0 1</span><br></pre></td></tr></table></figure><h5 id="Output-2"><a href="#Output-2" class="headerlink" title="Output"></a>Output</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">112</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 状压DP </tag>
            
            <tag> 算法 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
